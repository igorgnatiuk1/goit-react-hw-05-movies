{"version":3,"sources":["components/PageHeading/PageHeading.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/PageHeading/PageHeading.js","views/MoviesView/MoviesView.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","PageHeading","onSubmit","useState","query","setQuery","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","e","currentTarget","className","styles","input","button","MoviesView","url","useRouteMatch","location","useLocation","history","useHistory","movies","setMovies","URLSearchParams","search","get","searchQuery","setSearchQuery","error","setError","useEffect","fetchMovieByQuery","then","request","results","catch","message","style","color","textAlign","fontSize","map","movie","item","to","pathname","id","state","from","image","src","IMAGE_URL","poster_path","alt","original_title","title"],"mappings":"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","file":"static/js/MoviesView.f1f143cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"PageHeading_input__2YfQc\",\"button\":\"PageHeading_button__1Y3lt\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './PageHeading.module.css'\r\n\r\n\r\nfunction PageHeading({ onSubmit }) {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setQuery(e.currentTarget.value);\r\n    };\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (query.length !== 0) {\r\n            onSubmit(query);\r\n            setQuery('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <form  onSubmit={handleSubmit}>\r\n                <input\r\n\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Пошук фільму\"\r\n                    onChange={handleChange}\r\n                    value={query}\r\n                    className={styles.input}\r\n                />\r\n                <button className={styles.button} type=\"submit\" >\r\n                    Знайти\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nPageHeading.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default PageHeading;","import React, { useState, useEffect } from 'react';\r\nimport {fetchMovieByQuery, IMAGE_URL} from '../../services/books-api';\r\nimport { useRouteMatch, useLocation, useHistory, Link } from \"react-router-dom\";\r\nimport Searchbar from '../../components/PageHeading/PageHeading';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../HomeView/HomeView.module.css\";\r\n\r\n\r\nexport default function MoviesView() {\r\n    const { url } = useRouteMatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [movies, setMovies] = useState(null);\r\n    const [searchQuery, setSearchQuery] = useState(new URLSearchParams(location.search).get('query') ?? '',);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (searchQuery)\r\n            fetchMovieByQuery(searchQuery)\r\n                .then(request => {\r\n                    setMovies(request.results);\r\n                })\r\n                .catch(error => setError(error.message));\r\n    }, [searchQuery]);\r\n\r\n    const onChangeQuery = query => {\r\n        setMovies([]);\r\n        setError(null);\r\n        setSearchQuery(query);\r\n        history.push({\r\n            ...location,\r\n            search: `query=${query}`,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Searchbar onSubmit={onChangeQuery} />\r\n\r\n            {error && (\r\n                <p style={{ color: 'red', textAlign: 'center', fontSize: '20px' }}>\r\n                    This is error: {error}\r\n                </p>\r\n            )}\r\n\r\n            <section>\r\n                {movies && (\r\n                    <ul>\r\n                        {movies.map(movie => (\r\n                            <li className={styles.item} key={movie.id} >\r\n                                <Link  to={{\r\n                                    pathname: `${url}/${movie.id}`,\r\n                                    state: { from: location\r\n                                    }\r\n                                }}><img  className={styles.image} src={`${IMAGE_URL}${movie.poster_path}`} alt={movie.original_title} />\r\n                                    {movie.title}</Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>)}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nMoviesView.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};"],"sourceRoot":""}